{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hollyhenaghan/Documents/L3T11/star-wars/pages/post.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport Layout from '../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => /*#__PURE__*/_jsxDEV(Layout, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"jsx-1365912562\",\n    children: props.person.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"jsx-1365912562\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-1365912562\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-1365912562\",\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-1365912562\",\n        children: props.person.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-1365912562\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-1365912562\",\n        children: \"Height:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-1365912562\",\n        children: props.person.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-1365912562\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-1365912562\",\n        children: \"Hair Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-1365912562\",\n        children: props.person.hair_color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-1365912562\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-1365912562\",\n        children: \"Skin Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-1365912562\",\n        children: props.person.skin_color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-1365912562\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-1365912562\",\n        children: \"Eye Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-1365912562\",\n        children: props.person.eye_color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n    id: \"1365912562\",\n    children: \"h1.jsx-1365912562{font-family:'News Gothic';text-transform:uppercase;-webkit-text-decoration:underline overline;text-decoration:underline overline;padding:5px;}table.jsx-1365912562{margin-left:auto;margin-right:auto;}th.jsx-1365912562{padding:10px;padding-right:50px;text-transform:uppercase;font-weight:100;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ob2xseWhlbmFnaGFuL0RvY3VtZW50cy9MM1QxMS9zdGFyLXdhcnMvcGFnZXMvcG9zdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Qm1CLEFBR3FDLEFBTVQsQUFJSixhQUNNLElBSkQsU0FOTyxNQVdBLEdBSjNCLGdCQU5xQyxNQVduQixnQkFDbEIsd0RBWGMsWUFDZCIsImZpbGUiOiIvVXNlcnMvaG9sbHloZW5hZ2hhbi9Eb2N1bWVudHMvTDNUMTEvc3Rhci13YXJzL3BhZ2VzL3Bvc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQuanMnXHJcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXHJcblxyXG5jb25zdCBQb3N0ID0gKHByb3BzKSA9PiAoXHJcbiAgICA8TGF5b3V0PlxyXG4gICAgICAgPGgxPntwcm9wcy5wZXJzb24ubmFtZX08L2gxPlxyXG4gICAgICAgPHRhYmxlPlxyXG4gICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICA8dGg+R2VuZGVyOjwvdGg+XHJcbiAgICAgICAgICAgIDx0ZD57cHJvcHMucGVyc29uLmdlbmRlcn08L3RkPlxyXG4gICAgICAgICAgPC90cj5cclxuICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgPHRoPkhlaWdodDo8L3RoPlxyXG4gICAgICAgICAgICA8dGQ+e3Byb3BzLnBlcnNvbi5oZWlnaHR9PC90ZD5cclxuICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgIDx0aD5IYWlyIENvbG9yOjwvdGg+XHJcbiAgICAgICAgICAgIDx0ZD57cHJvcHMucGVyc29uLmhhaXJfY29sb3J9PC90ZD5cclxuICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgIDx0aD5Ta2luIENvbG9yOjwvdGg+XHJcbiAgICAgICAgICAgIDx0ZD57cHJvcHMucGVyc29uLnNraW5fY29sb3J9PC90ZD5cclxuICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgIDx0aD5FeWUgQ29sb3I6PC90aD5cclxuICAgICAgICAgICAgPHRkPntwcm9wcy5wZXJzb24uZXllX2NvbG9yfTwvdGQ+XHJcbiAgICAgICAgICA8L3RyPlxyXG4gICAgICAgPC90YWJsZT5cclxuXHJcbiAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgaDEge1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdOZXdzIEdvdGhpYyc7XHJcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgb3ZlcmxpbmU7XHJcbiAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRhYmxlIHtcclxuICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aCB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgcGFkZGluZy1yaWdodDogNTBweDtcclxuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9MYXlvdXQ+XHJcbilcclxuXHJcbi8qIEhlcmUgd2Ugb25jZSBhZ2FpbiB1c2UgZ2V0SW5pdGlhbFByb3BzLiBUaGlzIHRpbWUgd2UgcmV0cmlldmVcclxuZGF0YSBmcm9tIHRoZSBUVk1hemUgQVBJIHVzaW5nIHRoZSBJRCBwYXNzZWQgdGhyb3VnaCBmcm9tIGluZGV4LmpzLlxyXG5UaGUgZmlyc3QgYXJndW1lbnQgb2YgdGhlIGZ1bmN0aW9uIGlzIHRoZSBjb250ZXh0IG9iamVjdC4gXHJcbkl0IGhhcyBhIHF1ZXJ5IGZpZWxkIHRoYXQgd2UgY2FuIHVzZSB0byBmZXRjaCBpbmZvcm1hdGlvbi5cclxuSW4gb3VyIGV4YW1wbGUsIHdlIHBpY2tlZCB0aGUgc2hvdyBJRCBmcm9tIHF1ZXJ5IHBhcmFtcyBhbmQgZmV0Y2hlZCBpdHMgc2hvdyBkYXRhIGZyb20gdGhlIFRWTWF6ZSBBUEkuICovXHJcblBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICBjb25zdCB7IGlkIH0gPSBjb250ZXh0LnF1ZXJ5XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9zd2FwaS5kZXYvYXBpL3Blb3BsZS8/c2VhcmNoPSR7aWR9YClcclxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKVxyXG4gIGNvbnN0IHBlcnNvbiA9IGRhdGEucmVzdWx0c1swXVxyXG5cclxuICBjb25zb2xlLmxvZyhgRmV0Y2hlZCBjaGFyYWN0ZXI6ICR7cGVyc29uLm5hbWV9YClcclxuXHJcbiAgcmV0dXJuIHsgcGVyc29uIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9zdCJdfQ== */\\n/*@ sourceURL=/Users/hollyhenaghan/Documents/L3T11/star-wars/pages/post.js */\"\n  }, void 0, false, void 0, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n/* Here we once again use getInitialProps. This time we retrieve\r\ndata from the TVMaze API using the ID passed through from index.js.\r\nThe first argument of the function is the context object. \r\nIt has a query field that we can use to fetch information.\r\nIn our example, we picked the show ID from query params and fetched its show data from the TVMaze API. */\n\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`http://swapi.dev/api/people/?search=${id}`);\n  const data = await res.json();\n  const person = data.results[0];\n  console.log(`Fetched character: ${person.name}`);\n  return {\n    person\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/hollyhenaghan/Documents/L3T11/star-wars/pages/post.js"],"names":["Layout","fetch","Post","props","person","name","gender","height","hair_color","skin_color","eye_color","getInitialProps","context","id","query","res","data","json","results","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,iBACT,QAAC,MAAD;AAAA,0BACG;AAAA;AAAA,cAAKA,KAAK,CAACC,MAAN,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UADH,eAEG;AAAA;AAAA,4BACG;AAAA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA,kBAAKF,KAAK,CAACC,MAAN,CAAaE;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAKG;AAAA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA,kBAAKH,KAAK,CAACC,MAAN,CAAaG;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALH,eASG;AAAA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA,kBAAKJ,KAAK,CAACC,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATH,eAaG;AAAA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA,kBAAKL,KAAK,CAACC,MAAN,CAAaK;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbH,eAiBG;AAAA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA,kBAAKN,KAAK,CAACC,MAAN,CAAaM;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AA+CA;AACA;AACA;AACA;AACA;;;AACAR,IAAI,CAACS,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMd,KAAK,CAAE,uCAAsCY,EAAG,EAA3C,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMb,MAAM,GAAGY,IAAI,CAACE,OAAL,CAAa,CAAb,CAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBhB,MAAM,CAACC,IAAK,EAA9C;AAEA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD,CATD;;AAWA,eAAeF,IAAf","sourcesContent":["import Layout from '../components/MyLayout.js'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Post = (props) => (\r\n    <Layout>\r\n       <h1>{props.person.name}</h1>\r\n       <table>\r\n          <tr>\r\n            <th>Gender:</th>\r\n            <td>{props.person.gender}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Height:</th>\r\n            <td>{props.person.height}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Hair Color:</th>\r\n            <td>{props.person.hair_color}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Skin Color:</th>\r\n            <td>{props.person.skin_color}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Eye Color:</th>\r\n            <td>{props.person.eye_color}</td>\r\n          </tr>\r\n       </table>\r\n\r\n       <style jsx>{`\r\n        h1 {\r\n          font-family: 'News Gothic';\r\n          text-transform: uppercase;\r\n          text-decoration: underline overline;\r\n          padding: 5px;\r\n        }\r\n        table {\r\n          margin-left: auto;\r\n          margin-right: auto;\r\n        }\r\n        th {\r\n          padding: 10px;\r\n          padding-right: 50px;\r\n          text-transform: uppercase;\r\n          font-weight: 100;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n)\r\n\r\n/* Here we once again use getInitialProps. This time we retrieve\r\ndata from the TVMaze API using the ID passed through from index.js.\r\nThe first argument of the function is the context object. \r\nIt has a query field that we can use to fetch information.\r\nIn our example, we picked the show ID from query params and fetched its show data from the TVMaze API. */\r\nPost.getInitialProps = async function (context) {\r\n  const { id } = context.query\r\n  const res = await fetch(`http://swapi.dev/api/people/?search=${id}`)\r\n  const data = await res.json()\r\n  const person = data.results[0]\r\n\r\n  console.log(`Fetched character: ${person.name}`)\r\n\r\n  return { person }\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}