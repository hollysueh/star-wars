{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hollyhenaghan/Documents/L3T11/star-wars/pages/post.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport Layout from '../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => /*#__PURE__*/_jsxDEV(Layout, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"jsx-287549061\",\n    children: props.person.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"jsx-287549061\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-287549061\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-287549061\",\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-287549061\",\n        children: props.person.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-287549061\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-287549061\",\n        children: \"Height:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-287549061\",\n        children: props.person.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-287549061\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-287549061\",\n        children: \"Hair Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-287549061\",\n        children: props.person.hair_color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-287549061\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-287549061\",\n        children: \"Skin Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-287549061\",\n        children: props.person.skin_color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"jsx-287549061\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"jsx-287549061\",\n        children: \"Eye Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"jsx-287549061\",\n        children: props.person.eye_color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"jsx-287549061\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"jsx-287549061\",\n      children: \"Gender: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), props.person.gender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"jsx-287549061\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"jsx-287549061\",\n      children: \"Height: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), props.person.height]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"jsx-287549061\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"jsx-287549061\",\n      children: \"Hair Color: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), props.person.hair_color]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"jsx-287549061\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"jsx-287549061\",\n      children: \"Skin Color: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), props.person.skin_color]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"jsx-287549061\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"jsx-287549061\",\n      children: \"Eye Color: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), props.person.eye_color]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n    id: \"287549061\",\n    children: \"h1.jsx-287549061{font-family:'News Gothic';text-transform:uppercase;-webkit-text-decoration:underline overline;text-decoration:underline overline;padding:5px;}b.jsx-287549061{text-transform:uppercase;font-weight:100;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ob2xseWhlbmFnaGFuL0RvY3VtZW50cy9MM1QxMS9zdGFyLXdhcnMvcGFnZXMvcG9zdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQ21CLEFBR3FDLEFBTUQseUJBQ1QsQ0FOUyxlQU8zQixVQU5xQyw4RUFDdkIsWUFDZCIsImZpbGUiOiIvVXNlcnMvaG9sbHloZW5hZ2hhbi9Eb2N1bWVudHMvTDNUMTEvc3Rhci13YXJzL3BhZ2VzL3Bvc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQuanMnXHJcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXHJcblxyXG5jb25zdCBQb3N0ID0gKHByb3BzKSA9PiAoXHJcbiAgICA8TGF5b3V0PlxyXG4gICAgICAgPGgxPntwcm9wcy5wZXJzb24ubmFtZX08L2gxPlxyXG4gICAgICAgPHRhYmxlPlxyXG4gICAgICAgICA8dHI+XHJcbiAgICAgICAgICA8dGg+R2VuZGVyOjwvdGg+XHJcbiAgICAgICAgICA8dGQ+e3Byb3BzLnBlcnNvbi5nZW5kZXJ9PC90ZD5cclxuICAgICAgICA8L3RyPlxyXG4gICAgICAgIDx0cj5cclxuICAgICAgICA8dGg+SGVpZ2h0OjwvdGg+XHJcbiAgICAgICAgPHRkPntwcm9wcy5wZXJzb24uaGVpZ2h0fTwvdGQ+XHJcbiAgICAgICAgPC90cj5cclxuICAgICAgICA8dHI+XHJcbiAgICAgICAgPHRoPkhhaXIgQ29sb3I6PC90aD5cclxuICAgICAgICA8dGQ+e3Byb3BzLnBlcnNvbi5oYWlyX2NvbG9yfTwvdGQ+XHJcbiAgICAgICAgPC90cj5cclxuICAgICAgICA8dHI+XHJcbiAgICAgICAgPHRoPlNraW4gQ29sb3I6PC90aD5cclxuICAgICAgICA8dGQ+e3Byb3BzLnBlcnNvbi5za2luX2NvbG9yfTwvdGQ+XHJcbiAgICAgICAgPC90cj5cclxuICAgICAgICA8dHI+XHJcbiAgICAgICAgPHRoPkV5ZSBDb2xvcjo8L3RoPlxyXG4gICAgICAgIDx0ZD57cHJvcHMucGVyc29uLmV5ZV9jb2xvcn08L3RkPlxyXG4gICAgICAgIDwvdHI+XHJcbiAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgPHA+PGI+R2VuZGVyOiA8L2I+e3Byb3BzLnBlcnNvbi5nZW5kZXJ9PC9wPlxyXG4gICAgICAgPHA+PGI+SGVpZ2h0OiA8L2I+e3Byb3BzLnBlcnNvbi5oZWlnaHR9PC9wPlxyXG4gICAgICAgPHA+PGI+SGFpciBDb2xvcjogPC9iPntwcm9wcy5wZXJzb24uaGFpcl9jb2xvcn08L3A+XHJcbiAgICAgICA8cD48Yj5Ta2luIENvbG9yOiA8L2I+e3Byb3BzLnBlcnNvbi5za2luX2NvbG9yfTwvcD5cclxuICAgICAgIDxwPjxiPkV5ZSBDb2xvcjogPC9iPntwcm9wcy5wZXJzb24uZXllX2NvbG9yfTwvcD5cclxuXHJcbiAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgaDEge1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdOZXdzIEdvdGhpYyc7XHJcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgb3ZlcmxpbmU7XHJcbiAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGIge1xyXG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICA8L0xheW91dD5cclxuKVxyXG5cclxuLyogSGVyZSB3ZSBvbmNlIGFnYWluIHVzZSBnZXRJbml0aWFsUHJvcHMuIFRoaXMgdGltZSB3ZSByZXRyaWV2ZVxyXG5kYXRhIGZyb20gdGhlIFRWTWF6ZSBBUEkgdXNpbmcgdGhlIElEIHBhc3NlZCB0aHJvdWdoIGZyb20gaW5kZXguanMuXHJcblRoZSBmaXJzdCBhcmd1bWVudCBvZiB0aGUgZnVuY3Rpb24gaXMgdGhlIGNvbnRleHQgb2JqZWN0LiBcclxuSXQgaGFzIGEgcXVlcnkgZmllbGQgdGhhdCB3ZSBjYW4gdXNlIHRvIGZldGNoIGluZm9ybWF0aW9uLlxyXG5JbiBvdXIgZXhhbXBsZSwgd2UgcGlja2VkIHRoZSBzaG93IElEIGZyb20gcXVlcnkgcGFyYW1zIGFuZCBmZXRjaGVkIGl0cyBzaG93IGRhdGEgZnJvbSB0aGUgVFZNYXplIEFQSS4gKi9cclxuUG9zdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gIGNvbnN0IHsgaWQgfSA9IGNvbnRleHQucXVlcnlcclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cDovL3N3YXBpLmRldi9hcGkvcGVvcGxlLz9zZWFyY2g9JHtpZH1gKVxyXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpXHJcbiAgY29uc3QgcGVyc29uID0gZGF0YS5yZXN1bHRzWzBdXHJcblxyXG4gIGNvbnNvbGUubG9nKGBGZXRjaGVkIGNoYXJhY3RlcjogJHtwZXJzb24ubmFtZX1gKVxyXG5cclxuICByZXR1cm4geyBwZXJzb24gfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3N0Il19 */\\n/*@ sourceURL=/Users/hollyhenaghan/Documents/L3T11/star-wars/pages/post.js */\"\n  }, void 0, false, void 0, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n/* Here we once again use getInitialProps. This time we retrieve\r\ndata from the TVMaze API using the ID passed through from index.js.\r\nThe first argument of the function is the context object. \r\nIt has a query field that we can use to fetch information.\r\nIn our example, we picked the show ID from query params and fetched its show data from the TVMaze API. */\n\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`http://swapi.dev/api/people/?search=${id}`);\n  const data = await res.json();\n  const person = data.results[0];\n  console.log(`Fetched character: ${person.name}`);\n  return {\n    person\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/hollyhenaghan/Documents/L3T11/star-wars/pages/post.js"],"names":["Layout","fetch","Post","props","person","name","gender","height","hair_color","skin_color","eye_color","getInitialProps","context","id","query","res","data","json","results","console","log"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout.js'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Post = (props) => (\r\n    <Layout>\r\n       <h1>{props.person.name}</h1>\r\n       <table>\r\n         <tr>\r\n          <th>Gender:</th>\r\n          <td>{props.person.gender}</td>\r\n        </tr>\r\n        <tr>\r\n        <th>Height:</th>\r\n        <td>{props.person.height}</td>\r\n        </tr>\r\n        <tr>\r\n        <th>Hair Color:</th>\r\n        <td>{props.person.hair_color}</td>\r\n        </tr>\r\n        <tr>\r\n        <th>Skin Color:</th>\r\n        <td>{props.person.skin_color}</td>\r\n        </tr>\r\n        <tr>\r\n        <th>Eye Color:</th>\r\n        <td>{props.person.eye_color}</td>\r\n        </tr>\r\n       </table>\r\n       <p><b>Gender: </b>{props.person.gender}</p>\r\n       <p><b>Height: </b>{props.person.height}</p>\r\n       <p><b>Hair Color: </b>{props.person.hair_color}</p>\r\n       <p><b>Skin Color: </b>{props.person.skin_color}</p>\r\n       <p><b>Eye Color: </b>{props.person.eye_color}</p>\r\n\r\n       <style jsx>{`\r\n        h1 {\r\n          font-family: 'News Gothic';\r\n          text-transform: uppercase;\r\n          text-decoration: underline overline;\r\n          padding: 5px;\r\n        }\r\n        b {\r\n          text-transform: uppercase;\r\n          font-weight: 100;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n)\r\n\r\n/* Here we once again use getInitialProps. This time we retrieve\r\ndata from the TVMaze API using the ID passed through from index.js.\r\nThe first argument of the function is the context object. \r\nIt has a query field that we can use to fetch information.\r\nIn our example, we picked the show ID from query params and fetched its show data from the TVMaze API. */\r\nPost.getInitialProps = async function (context) {\r\n  const { id } = context.query\r\n  const res = await fetch(`http://swapi.dev/api/people/?search=${id}`)\r\n  const data = await res.json()\r\n  const person = data.results[0]\r\n\r\n  console.log(`Fetched character: ${person.name}`)\r\n\r\n  return { person }\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}